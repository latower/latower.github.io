@inproceedings{LatEtAl22b,
    author = {Anna L.D. Latour and Behrouz Babaki and Dani\"el Fokkinga and Marie Anastacio and Holger H. Hoos and Siegfried Nijssen},
    title = "Stochastic Constraint Optimisation with Applications in Network Analysis (extended abstract)",
    booktitle = "Workshop on Counting and Sampling 2022, in conjunction with FLoC 2022 and SAT 2022",
    year = "2022",
    month = "aug",
    tags = "constraint optimisation, weighted model counting, probabilistic inference, network analysis, reasoning under uncertainty"
}
@inproceedings{LatEtAl19a,
  author    = {Anna L.D. Latour and
               Behrouz Babaki and
               Siegfried Nijssen},
  title     = {Stochastic Constraint Propagation for Mining Probabilistic Networks},
  booktitle = {Proceedings of the 28th International Joint Conference on Artificial Intelligence (IJCAI 2019)},
  pages     = {1137--1145},
  publisher = {ijcai.org},
  year      = {2019},
  abstract  = {A number of data mining problems on probabilistic networks can be modeled as Stochastic Constraint Optimization and Satisfaction Problems, i.e., problems that involve objectives or constraints with a stochastic component. Earlier methods for solving these problems used Ordered Binary Decision Diagrams (OBDDs) to represent constraints on probability distributions, which were decomposed into sets of smaller constraints and solved by Constraint Programming (CP) or Mixed Integer Programming (MIP) solvers. For the specific case of monotonic distributions, we propose an alternative method: a new propagator for a global OBDD-based constraint. We show that this propagator is (sub-)linear in the size of the OBDD, and maintains domain consistency. We experimentally evaluate the effectiveness of this global constraint in comparison to existing decomposition-based approaches, and show how this propagator can be used in combination with another data mining specific constraint present in CP systems. As test cases we use problems from the data mining literature.},
  keywords  = {Global Constraints, Exact Probabilistic Inference, Combinatorial Search and Optimisation, Uncertainty in AI},
} 
@inproceedings{LatEtAl19b,
  author    = {Anna L.D. Latour and
               Behrouz Babaki and
               Siegfried Nijssen},
  title     = {Stochastic Constraint Propagation for Mining Probabilistic Networks (extended abstract)},
  booktitle = {Proceedings of the 31st Benelux Conference on Artificial Intelligence (BNAIC 2019) and the 28th Belgian Dutch Conference on Machine Learning (Benelearn 2019)},
  series    = {{CEUR} Workshop Proceedings},
  volume    = {2491},
  publisher = {CEUR-WS.org},
  year      = {2019},
  abstract  = {A number of data mining problems on probabilistic networks can be modelled as Stochastic Constraint Optimisation and Satisfaction Problems, i.e., problems that involve objectives or constraints with a stochastic component. Earlier methods for solving these problems used Ordered Binary Decision Diagrams (OBDDs) to represent constraints on probability distributions, which were decomposed into sets of smaller constraints and solved by Constraint Programming (CP) or Mixed Integer Programming (MIP) solvers. For the specific case of monotonic distributions, we propose an alternative method: a new propagator for a global OBDD-based constraint. We show that this propagator is efficient and maintains domain consistency. We experimentally evaluate this global constraint in comparison to existing decomposition-based approaches. As test cases we use problems from the data mining literature.},
  keywords  = {Constraint Programming, Constraint Optimisation, Stochastic Constraint Optimisation, Combinatorial Optimisation, Global Constraints, Ordered Binary Decision Diagrams.}
}
@inproceedings{LatEtAl23b,
  author       = {Anna L. D. Latour and
                  Arunabha Sen and
                  Kuldeep S. Meel},
  title        = {Solving the Identifying Code Set Problem with Grouped Independent Support (extended abstract)},
  booktitle    = {The 22nd workshop on Constraint Modelling and Reformulation (ModRef 2023), in conjunction with CP 2023},
  year         = {2023},
  month		   = {aug},
  url          = {https://modref.github.io/papers/ModRef2023_SolvingTheIndependentCodeSetProblemWithGroupedIndependentSupport.pdf},
  abstract={An important problem in network science is finding an optimal placement of sensors in nodes in order to uniquely detect failures in the network. This problem can be modelled as an identifying code set (ICS) problem, introduced by Karpovsky et al. in 1998. The ICS problem aims to find a cover of a set S, such that the elements in the cover define a unique signature for each of the elements of S, and to minimise the cover’s cardinality. In this work, we study a generalised identifying code set (GICS) problem, where a unique signature must be found for each subset of S that has a cardinality of at most k (instead of just each element of S). The concept of an independent support of a Boolean formula was introduced by Chakraborty et al. in 2014 to speed up propositional model counting, by identifying a subset of variables whose truth assignments uniquely define those of the other variables. In this work, we introduce an extended version of independent support, grouped independent support (GIS), and show how to reduce the GICS problem to the GIS problem. We then propose a new solving method for finding a GICS, based on finding a GIS. We show that the prior state-of-the-art approaches yield integer-linear programming (ILP) models whose sizes grow exponentially with the problem size and k, while our GIS encoding only grows polynomially with the problem size and k. While the ILP approach can solve the GICS problem on networks of at most 494 nodes, the GIS-based method can handle networks of up to 21 363 nodes; a ∼40× improvement. The GIS-based method shows up to a 520× improvement on the ILP-based method in terms of median solving time. For the majority of the instances that can be encoded and solved by both methods, the cardinality of the solution returned by the GIS-based method is less than 10% larger than the cardinality of the solution found by the ILP method.}
}

@inproceedings{LatEtAl18,
  author    = {Anna L.D. Latour and
               Behrouz Babaki and
               Siegfried Nijssen},
  title     = {Stochastic Constraint Optimization using Propagation on Ordered Binary Decision Diagrams},
  booktitle   = {8th International Workshop on Statistical Relational AI (StarAI 2018), held in conjunction with IJCAI 2018},
  month     = {jul},
  year      = {2018}
} 
@inproceedings{LatEtAl23,
  author       = {Anna L. D. Latour and
                  Arunabha Sen and
                  Kuldeep S. Meel},
  title        = {Solving the Identifying Code Set Problem with Grouped Independent
                  Support},
  booktitle    = {Proceedings of the Thirty-Second International Joint Conference on
                  Artificial Intelligence, {IJCAI} 2023, 19th-25th August 2023, Macao,
                  SAR, China},
  pages        = {1971--1978},
  publisher    = {ijcai.org},
  year         = {2023},
  url          = {https://doi.org/10.24963/ijcai.2023/219},
  doi          = {10.24963/ijcai.2023/219},
  abstract={An important problem in network science is finding an optimal placement of sensors in nodes in order to uniquely detect failures in the network. This problem can be modelled as an identifying code set (ICS) problem, introduced by Karpovsky et al. in 1998. The ICS problem aims to find a cover of a set S, such that the elements in the cover define a unique signature for each of the elements of S, and to minimise the cover’s cardinality. In this work, we study a generalised identifying code set (GICS) problem, where a unique signature must be found for each subset of S that has a cardinality of at most k (instead of just each element of S). The concept of an independent support of a Boolean formula was introduced by Chakraborty et al. in 2014 to speed up propositional model counting, by identifying a subset of variables whose truth assignments uniquely define those of the other variables. In this work, we introduce an extended version of independent support, grouped independent support (GIS), and show how to reduce the GICS problem to the GIS problem. We then propose a new solving method for finding a GICS, based on finding a GIS. We show that the prior state-of-the-art approaches yield integer-linear programming (ILP) models whose sizes grow exponentially with the problem size and k, while our GIS encoding only grows polynomially with the problem size and k. While the ILP approach can solve the GICS problem on networks of at most 494 nodes, the GIS-based method can handle networks of up to 21 363 nodes; a ∼40× improvement. The GIS-based method shows up to a 520× improvement on the ILP-based method in terms of median solving time. For the majority of the instances that can be encoded and solved by both methods, the cardinality of the solution returned by the GIS-based method is less than 10% larger than the cardinality of the solution found by the ILP method.}
}

@inproceedings{LatEtAl20,
  title={Stochastic Constraint Optimisation with Applications in Network Analysis (extended abstract)},
  author={Anna L.D. Latour and Behrouz Babaki and Dani\"el Fokkinga and Marie Anastacio and Holger H. Hoos and Siegfried Nijssen},
  booktitle={International Workshop on Model Counting (MCW), held in conjunction with SAT 2020},
  year={2020},
  month={jul},
  abstract={Stochastic Constraint (optimisation) Problems (SCPs) are problems that combine weighted model counting (WMC) with constraint satisfaction and optimisation. We present an extensive study of methods for exactly solving SCPs in network analysis, where the underlying probability distributions have a monotonic property. These methods use knowledge compilation to address the model counting problem; subsequently, either a constraint programming (CP) solver or mixed integer programming (MIP) solver is used to solve the overall SCP. To configure the space of parameters of these approaches, we propose to use the framework of programming by optimisation. The result shows that a CP-based pipeline obtains the best performance.},
  keywords = {constraint optimisation, weighted model counting, probabilistic inference, network analysis, reasoning under uncertainty},
  tags = {constraint optimisation, weighted model counting, probabilistic inference, network analysis, reasoning under uncertainty},
}
@inproceedings{LatEtAl17,
  author    = {Anna L.D. Latour and
               Behrouz Babaki and
               Anoton Dries and
               Angelika Kimmig and
               Guy {Van den Broeck} and
               Siegfried Nijssen},
  title     = {Combining Stochastic Constraint Optimization and Probabilistic Programming --- From Knowledge Compilation to Constraint Solving},
  booktitle = {Proceedings of the 23rd International Conference on Principles and Practice of Constraint Programming (CP 2017)},
  series    = {Lecture Notes in Computer Science},
  volume    = {10416},
  pages     = {495--511},
  publisher = {Springer},
  year      = {2017},
  abstract  = {We show that a number of problems in Artificial Intelligence can be seen as Stochastic Constraint Optimization Problems (SCOPs): problems that have both a stochastic and a constraint optimization component. We argue that these problems can be modeled in a new language, SC-ProbLog, that combines a generic Probabilistic Logic Programming (PLP) language, ProbLog, with stochastic constraint optimization. We propose a toolchain for effectively solving these SC-ProbLog programs, which consists of two stages. In the first stage, decision diagrams are compiled for the underlying distributions. These diagrams are converted into models that are solved using Mixed Integer Programming or Constraint Programming solvers in the second stage. We show that, to yield linear constraints, decision diagrams need to be compiled in a specific form. We introduce a new method for compiling small Sentential Decision Diagrams in this form. We evaluate the effectiveness of several variations of this toolchain on test cases in viral marketing and bioinformatics.},
  keywords = {Viral Marketing, Toolchain, Ordered Binary Decision Diagrams, Sentential Decision Diagrams, Weighted Model Counting, ProbLog}
} 
@inproceedings{FokEtAl19,
    author = {Dani\"el Fokkinga and Anna L.D. Latour and Marie Anastacio and Siegfried Nijssen and Holger Hoos},
    title = "Programming a Stochastic Constraint Optimisation Algorithm, by Optimisation",
    booktitle = "Workshop Data Science meets Optimisation (DSO), held in conjunction with IJCAI 2019",
    year = "2019",
    month = "aug",
    abstract = "Stochastic Constraint Optimisation Problems (SCOPs), such as the viral marketing problem and transmission grid reliability problem, arise in fields such as industry, governance and science. The recently proposed Stochastic Constraint Probabilistic Prolog (SC-ProbLog) language makes it possible to model and solve such SCOPs. Solving SCOPs exactly is NP-hard, and to solve real-world problems, exact SCOP solving methods must employ highly optimised heuristics. We propose to follow the principle of Programming by Optimisation (PbO): we expose the design choices of a recently proposed SCOP solving method and optimise these using Automated Algorithm Configuration (AAC). For a set of viral marketing problems, our optimised SCOP solver runs up to 26 times faster and solves almost two thirds of the instances that could not be solved within a cutoff time of ten minutes, by an expert-chosen default configuration of the solver. For a set of transmission grid reliability problems, the optimised configuration solves ten percent more instances overall, and solves some instances up to ten times faster."
} 
@inproceedings{RooEtAl20,
    author = "Jeroen G. Rook and Anna L.D. Latour and Siegfried Nijssen and Holger H. Hoos",
    title = "Better Caching for Better Model Counting (extended abstract)",
    booktitle = "International Workshop on Model Counting (MCW), held in conjunction with SAT 2020",
    year = "2020",
    month = "jul",
    abstract  = "State-of-the-art model counters provide a variety of branching heuristics, aiding users in configuring these solvers so they perform well on specific types of problem instances. However, they provide a limited choice of cache management strategies. We argue that the state of the art in model counting could benefit from more sophisticated heuristics for cache management. We motivate this with preliminary results and propose to use machine learning to develop new cache management heuristics.",
    keywords  = "machine learning, algorithm configuration, programming by optimisation, model counting", 
    tags = "machine learning, algorithm configuration, programming by optimisation, model counting",
}
@inproceedings{RooEtAl21,
    author = "Jeroen G. Rook and Anna L.D. Latour and Siegfried Nijssen and Holger H. Hoos",
    title = "Caching in Model Counters: A Journey through Space and Time (extended abstract)",
    booktitle = "Workshop on Counting and Sampling, held in conjunction with SAT 2021",
    year = "2021",
    month = "jul",
    keywords = "machine learning, algorithm configuration, programming by optimisation, model counting",
}
